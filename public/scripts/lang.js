$("document").ready(() => {
    var userLang = navigator.language || navigator.userLanguage;
    if (!userLang.toLowerCase().includes("no")) {
        setLang(userLang.toLowerCase());
        $('#notify').slideToggle(1000);
    }
})

const hnorsk = ["Hei!", "Hyggelig å se deg!", "<i class='far fa-hand-point-left'></i>Bruk knappene til å navigere", "Jeg er", "Alder:", "25 år gammel", "Bosted:", "Oslo, Norge", "Språk:", "Engelsk, Norsk, Tysk, Polsk", "Utdanning:", "Videregående skole med fagbrev i IT-bransjen", "Jeg vil bare beskrive har hva jeg har gjort og hvilke løsninger brukte jeg når jeg opprettet disse små prosjektene mine og hvorfor de ser ut som de gjør. Først skal jeg skrive noen korte stikkord som kan beskrive det. Dette er: Debian, nginx, JavaScript, JQuery, HTML, CSS, Node.js, NPMjs, Express, EJS, REST API, MongoDB, GIT, React og andre. Denne nettsiden kjører på min egen VPS server med Debian operativsystem som jeg konfigurerte selv. Hovedsiden og en annen side er appene som er skrevet i Node.js, WWW serveren er NGINX. Det kjører blant andre GIT server og mongoDB database på serveren. Begge sidene var gjort for å vise spesifikke teknologier og var laget hovedsakelig for pc-en. Mens jeg laget hovedsiden, ville jeg kjenne bedre CSS Grid og JQuery. Jeg var fokusert om å endre måte å bla på. Derfor, sjekk pc versjonen hvis du leser den på mobilen. Jeg tenkte på mange ting for å forholde riktig drift, som for eksempel hvis du endrer størrelse av nettleser. Kontaktskjemaet sender post request til serveren, brukerbekreftelse ved google recaptcha fungerer også på serversiden og er sikret med Fail2Ban. På avslutt er linken til GIT oppbevaringssted, du kan klone dem og sjekke koden. Du kan også sjekke det første innlegget mitt på stackoverflow, da beskriver jeg gjennomføring av denne løsningen: <a href='https://stackoverflow.com/questions/30866070/fail2ban-custom-filter-for-custom-node-js-application/69575369#69575369'>StackOverflow</a>. Denne nettsiden koden er ikke så dårlig allerede, jeg er veldig misfornøyd med CSS og dette innlegget også, jeg tenkte ikke at jeg skal skrive so mye her. Mobilversjonen var laget veldig fort, bare til å ha det her. Jeg her også gjort oversettelser her. Jeg kunne kanskje finne løsning med google oversettelser men jeg ville ha ekstra praksis i språk. Jeg kan rette mange ting men jeg skal lage denne siden helt på nytt snart. Det andre fullstendige fungerende nettstedet er på <a href='https://blog.nbtb.eu'>Blog</a> underdomene. Det var mitt første prosjekt så kvalitet er ikke så bra. Koden er kaotisk, det filer treet også, jeg brukte bare tilbakekallsprosesser, koden ser stygg ut men fungerer. Liten kommentar er skrevet på avslutt i app.js fil. Jeg ville bare avslutte det så fort som mulig fordi jeg syntes at jeg ikke skal bruke det. Mye javascript er skrevet i ejs filer hvor, for eksempel, jeg skrevet skript som lager skript til å lage matrise på bruker siden. Det hores rart ut men fungerer bra. Du kan se den i edit.ejs fil i partials mappen. Det også viser hvordan tenker jeg. Jeg kan finne tilpassede løsninger på problemer. Hvis du leser det og ser etter ansatte, skriv til meg. Jeg skal gi deg brukernavn og passord og du kan se at den fungerer. Blog bruker mongodb, mongoose, ejs som vis motor, passport for brukerautorisasjon. <a href='https://quilljs.com'>Quill.js</a> er teksten redigerer med base64-kodering for bilder. Det er også filopplasting for innlegg hovedbilder. Automatisk publisering på den valgte datoen med verifikasjon om bruker valgte riktig dato, søkemotor for tagger og tekst. Man kan lage innlegg, publisere, fjerne osv. Jeg prøvde å lage noe REST api sa det er post, get, patch, delete request. Det er veldig vanskelig å beskrive, men jeg har tenkt mange ting. CSS er veldig dårlig, men fungerer også på mobil. Jeg ville sjekke CSS Flex da. Jeg skjønner at mange ting er galt der. Jeg skulle legge til for eksempel mer validering på serversiden nå. Denne prosjektene viste meg veldig mye, også om organisering av arbeidet. Jeg hadde problem med det først. Kvalitet av neste blir mye bedre. Det er for mange til å beskrive men jeg kan gjerne fortelle om dem. Jeg vil bare si at disse prosjektene var laget etter ett kurs fra <a href='https://udemy.com'>udemy.com</a>. Jeg så på det på 1.5 hastighet og startet å lage alt. Det tok faktisk fra 2 til 3 måneder, 18 timer i uke(fordi jeg lære norsk også) til å lage disse appene og serverkonfigurasjon. Det viser hvor fort jeg lærer. Jag har veldig mye forskjellig kunnskap men jeg måtte huske hvordan jeg skulle gjøre det og sjekke programvarekonfigurasjon igjen. Na vil jeg lage neste blogg. Jeg synes at jeg skal legge noe der. Jeg vil bruke nå React.js og node.js som api. Jeg vil lære mer om informasjonskapsler og håndtrykk. Jeg vil sende push-varsler til aktive brukere osv. Jeg må fokusere på asynkrone funksjoner, promise og klasser. Etterpå vil jeg skrive React Native app. Sa jeg har skrevet, alt kjører på serveren med Debian Linux, så hel konfigurasjon var utført av meg. GIT server, www server, kryptering og sikkerhet osv. Jeg vil starte også e-post serveren, men det er litt komplisert så jeg forlot det senere. Jeg har mye andre erfaring. Jeg husker noe om Windows Server, MySQL osv. Jeg gjorde mange forskjellige ting. Hvis du vil, kan jeg forberede meg i teknologi du trenger. Etter blogg appen vil jeg begynne å lære andre programmerings språk. Jeg vil bli fleksibel. Målet er til å ha mulighet til å lage en server konfigurasjon, lage en mobil app, en nettside og et program for PC-er med macOS eller Windows osv. Men det avhenger av hva jeg skal jobbe med. Hvis jeg skal finne jobb i firma som skal trenge f. eks. Python da jeg skal lære Python. Jeg lære også norsk på norskkurs hele tid. Jeg er hyggelig som privatperson, jeg liker å samarbeide og dele kunnskap. Du kan se det etter nevnt tidligere innlegget på stackoverflow. Jeg er flink i å finne informasjon. Jeg er interessert i elektronikk og bilindustrien, etc. Det er også for mye til å beskrive. Hvis denne beskrivelsen interesserte deg, skriv til meg på kontakt skjema nede eller skriv til meg i stedet du har fant linken til denne nettsiden. <br>Kommandoer for GIT:<br><br><div id='one' class='copybox'><p>git clone https://git.nbtb.eu/git/main</p><i class='fas fa-copy cpbtn' onclick='copy(event)'></i></div><br><br><br><div id='two' class='copybox'><p>git clone https://git.nbtb.eu/git/blog</p><i class='fas fa-copy cpbtn' onclick='copy(event)'></i></div><br><br><br>Hvis du har problem med ssl sertifikater da bruk:<br><br><div id='three' class='copybox'><p>git config --global http.sslVerify 'false'</p><i class='fas fa-copy cpbtn' onclick='copy(event)'></i></div> <br><br><br>Etter kloning kan du hente tilbake tidligere innstillinger:<br><br><div id='four' class='copybox'><p>git config --global http.sslVerify 'true'</p><i class='fas fa-copy cpbtn' onclick='copy(event)'></i></div><br><br><br>Serveren er kryptert men GIT godkjenner ikke alle sertifikater. Hvis du ikke vil, da skriv til meg. Jeg kan sende det på annen mate. Jeg kan sende sertifikater fra skolen og norskkurs også. Jeg hoper at vi ser snart! :)", "Vil du vite mer om meg? Kontakt meg!<i class='far fa-hand-point-down'></i>", "Din melding...", "E-posten din..."];//email placeholder must be the last one in array
const jnorsk = ["Vennligst vent et øyeblikk", "Jeg hår fatt meldingen din og skal svare snart!", "Din melding-id er: ", "Takk!", "Noen feil her!", "Fyll reCaptcha først!", "Sjekk reCaptcha og prøv igjen.", "Prøv igjen senere."];

const henglish = ["Hi!", "Nice to see you!", "<i class='far fa-hand-point-left'></i>Use the buttons to navigate", "I am", "Age:", "25 years old", "Location:", "Oslo, Norway", "Languages:", "English, Norwegian, German, Polish", "Education:", "High school with IT-Technician certificate", "I just want to write short what I did here, what kind of solutions I used and why they look like they look. At first, I will write some keywords which can describe this: Debian, nginx, JavaScript, JQuery, HTML, CSS, Node.js, NPMjs, Express, EJS, REST API, MongoDB, GIT, React and others. I will start with the fact that this site works on my own VPS server working on Debian Linux, which was configured completely by me from scratch. Main side and second small project are apps written using Node.js, www server is NGINX. There are also GIT and mongoDB server. Both projects were made to get to know specific solutions and for pc computers. When I was writing main page, I wanted to use JQuery and CSS Grid. I was focused to change scroll behaviour, so if you reading this on mobile, check full version. Many things have been thought through to keep functions working right. For example, when browser window is resized. Contact form sends post request to server, google reCAPTCHA validation is working on server side also and secured by Fail2Ban. On the end of this description are links to git repo. You can clone them and check code. You can also check my first post on <a href='https://stackoverflow.com/questions/30866070/fail2ban-custom-filter-for-custom-node-js-application/69575369#69575369'>StackOverflow</a>. Source code of this website is not so bad already. I am really dissatisfied with CSS, mobile version was made very fast, just to be. I am really dissatisfied with this description. I was not expecting I will write so much text here. I am sure a lot of things can be made better. There are also three languages, I was probably able to fix this with google translate but I wanted to have extra practice with languages. Other completely working website is <a href='https://blog.nbtb.eu'>Blog</a> on subdomain. This was my first project so quality is not good. The code is chaotic, file tree also, I used only callbacks. The code looks bad but it works. Short comment is leaved on the end in app.js file. I wanted to finish this blog because I realized that I will not use it so it was writing it only in educational purposes. A lot of JavaScript is written in ejs files. Where for example when post is edited then script in ejs makes script which is making array which is loaded on user side. It looks weird but it works. This also shows the way I think. I can find custom solutions for problems. I will add post on this blog with description of functions. If You are reading this looking for employee, write to me. I will send you login and password and you will see that it works. Blog uses express, mongodb, mongoose, ejs as view engine, passport for user authorization. <a href='https://quilljs.com'>Quill.js</a> is text editor with base64 coding for images. There is also file upload for main image for post, automatic publication on date, search engine, and search engine for tags. It is possible to edit post, publish, delete, unpublish etc. I was trying to make an REST API so there are post, get, patch delete requests. There is hard to describe this all but I thought through many things. I can gladly tell about this. CSS styles are tragic but blog has mobile version too. I am aware that many things are just bad.  These projects showed me a lot. Also, about organization of work. I had problem with this at first. I am already thinking what to do next and I know that quality will be much better. These both things were just speedruns a bit because I wanted to start apply for work as fast as possible and I wanted to have something to show. I just want to add that both of these were made after one course from <a href='https://udemy.com'>udemy.com</a>. I watched it on 1.5 speed(teacher was speaking really slow :D). In fact, it took from two to three months, 18 hours a week, to made these websites and configure server. This shows how fast I learn. Now I want to write next blog but using React.js and Node.js for API. I found that I can maybe write there something. I want to know more about react, hooks, router, cookies, and handshake. I want to make push notification for active users etc. After that I want to write app in React Native. As I wrote, all is working on my own VPS server with Debian Linux so I configured NGINX, git server, security and encryption. I want to run post server but it is more complicated so I leaved it for now.  I have more other experience too. I remember something about Windows Server, MySQL etc. I did many things. If You want, I can prepare to something you need. I will gladly start work as system administrator or developer. After making this new blog I will start to learn other programming languages. I am learning to be flexible. I want to have possibility to configure server, build mobile app, website and computer program for mac/windows and more. As a person I am kind, I like to work in a team and share knowledge with others. You can see it from this post I mentioned. I am interested in electronic, automotive and others. It is also too much to write. If this description interested you then just write to me using contact form below or write me a message in place where you found link to this website.<br>GIT commands:<br><br><div id='one' class='copybox'><p>git clone https://git.nbtb.eu/git/main</p><i class='fas fa-copy cpbtn' onclick='copy(event)'></i></div><br><br><br><div id='two' class='copybox'><p>git clone https://git.nbtb.eu/git/blog</p><i class='fas fa-copy cpbtn' onclick='copy(event)'></i></div><br><br><br>If You get warning about SSL then use this command:<br><br><div id='three' class='copybox'><p>git config --global http.sslVerify 'false'</p><i class='fas fa-copy cpbtn' onclick='copy(event)'></i></div> <br><br><br>Bring back previous settings after cloning by:<br><br><div id='four' class='copybox'><p>git config --global http.sslVerify 'true'</p><i class='fas fa-copy cpbtn' onclick='copy(event)'></i></div><br><br><br> Server is encrypted but GIT does not trust every certificate provider. If You do not want to do this then just write to me. I will send this to You other way. I hope to hear from you soon! ", "Do you want to know more about me? Contact me!<i class='far fa-hand-point-down'></i>", "Your message...", "Your email adress:"];//email placeholder must be the last one in array
const jenglish = ["Please wait!", "I got Your message and will answer soon!", "Your message id is:", "Thank you!", "Some serror here: ", "Please finish reCaptcha!", "Check reCaptcha and try again.", "Try again later."];

const hpolish = ["Cześć!", "Miło Cię widzieć!", "<i class='far fa-hand-point-left'></i>Użyj przycisków aby się poruszać", "Jestem", "Wiek:", "25 lat", "Miejsce:", "Oslo, Norwegia", "Języki obce:", "Angielski, Norweski, Niemiecki", "Wyształcenie:", "Średnie-techniczne, profil: Technik-Informatyk", "Szukam pracy a ta strona została przygotowana jako moje interaktywne CV. Chciałbym tu krótko opisać co zrobiłem i z jakich rozwiązań korzystałem podczas tworzenia małych projektów oraz dlaczego wyglądają akurat tak. Na początek krótko wypisze słowa kluczowe: Debian, nginx, JavaScript, JQuery, HTML, CSS, Node.js, NPMjs, Express, EJS, REST API, MongoDB, GIT, React i inne. Zacznę od tego że ta strona działa na własnym serwerze VPS działającym na Debianie który został skonfigurowany przeze mnie od podstaw. Strona główna oraz drugi mały projekt to aplikacje napisane przeze mnie w Node.js, serwer www to NGINX. Na serwerze działa również między innymi serwer GIT oraz baza danych mongoDB. Oba projekty były robione w celu poznania konkretnych rozwiązań i były tworzone głównie z myślą o komputerach stacjonarnych. Tworząc stronę główną chciałem bardziej poznać JQuery oraz zapoznać się z CSS Grid. Głównie skupiłem się na tym żeby zmienić sposób przewijania. Dlatego jeżeli czytasz to z wersji mobilnej to sprawdź wersję na komputery. Zostało tu przemyślane wiele rzeczy w celu zachowania poprawności działania np. Przy zmianie wielkości okna przeglądarki. Formularz wysyła post request do serwera, weryfikacja google recaptcha została również zaimplementowana po stronie serwera i zabezpieczona przez Fail2Ban. Na końcu tego opisu są linki do repozytoriów GIT, można je sklonować i sprawdzić kod obu aplikacji, tam możesz to zobaczyć. Możesz też sprawdzić mój pierwszy post na stackoverflow gdzie opisuję implementację tego rozwiązania:<a href='https://stackoverflow.com/questions/30866070/fail2ban-custom-filter-for-custom-node-js-application/69575369#69575369'>StackOverflow</a>. Kod tej strony nie jest już taki zły, bardzo niezadowolony jestem ze stylów, wersja mobilna robiona była na szybko, sporo rzeczy mógłbym tam poprawić ale ta strona zostanie niedługo zmieniona. Druga kompletna działająca aplikacja to blog działający na subdomenie <a href='https://blog.nbtb.eu'>Blog</a>. To był pierwszy projekt który zrobiłem więc jakość nie jest zbyt dobra, kod jest chaotyczny, drzewo plików również, używałem tylko callbacków, kod brzydko wygląda ale działa. Krótki komentarz jest zostawiony na końcu w pliku app.js. Chciałem go skończyć jak najszybciej bo stwierdziłem że nie będę z niego korzystał więc było to pisane tylko dla nauki. Wiele javascriptu jest napisane również w plikach ejs gdzie np. Wczytywanie zapisanych tagów przy edycji postu zostało stworzone poprzez napisanie kodu w pliku ejs który generuje skrypt javascript który tworzy tablice po stronie użytkownika, brzmi dziwnie ale działa ale pokazuje to również sposób w jaki myślę. Potrafię znaleźć niestandardowe rozwiązania problemów. Wkrótce dodam na nim post opisujący funkcje. Jeżeli czytasz to szukając pracowanika to napisz do mnie, podam Ci login i hasło, zobaczysz jak działa panel administratora. Że można dodać post itd. Blog wykorzystuje express, bazę danych mongodb, mongoose, ejs jako view engine, passport do autoryzacji użytkowników. Edytorem tekstu jest <a href='https://quilljs.com'>Quill.js</a> Jest również zaimplementowany upload pliku, automatyczna publikacja o wybranej dacie, wyszukiwanie po tagach oraz wyszukiwarka. Post można edytować, usunąć, można cofnąć publikację itd. Starałem się stworzyć tam rest api więc są post, get, patch, delete requesty. Ciężko to wszystko opisać ale przemyślałem tam wiele rzeczy. Styl jest tragiczny ale działa również na wersjach mobilnych. Zdaje sobie sprawę z wielu rzeczy które są złe. Te projekty dużo mi pokazały. Chętnie o wszystkim opowiem, bo jest to zbyt wiele by opisywać. Dodam tylko że oba te projekty zostały stworzone po jednym kursie z <a href='https://udemy.com'>udemy.com</a> który obejrzałem na prędkości 1.5. Tak faktycznie to przejście przez ten kurs oraz stworzenie tych dwóch projektów oraz konfiguracja serwera zajęły od 2 do trzech miesięcy. Pokazuje to jak szybko się uczę. Napiszę teraz kolejnego kompletnego Bloga, tym razem używając React.js i Node.js do API. Stwierdziłem że będę mógł tam jednak coś napisać. Cel to poznać lepiej React, hooks, router. Dowiedzieć się więcej o ciasteczkach i handshake. Zaimplementować powiadomienia push do aktywnych użytkowników. Później spróbuję napisać aplikacje w React Native. Jak wspomniałem, wszystko działa na serwerze VPS, opartym na systemie Debian Linux, także konfiguracja zabezpieczeń, instalacja i konfiguracja serwera www, szyfrowanie, konfiguracja serwera git została wykonana przeze mnie. Pracuję nad uruchomieniem serwera poczty email. Mam też sporo innego doświadczenia, pamiętam coś o Windows Server, MySQL itd. Robiłem różne rzeczy. Jeżeli chcesz, mogę też przygotować się do technologii której Ty potrzebujesz. Chętnie zacznę prace jako programista lub administrator. Po stworzeniu bloga chce również zacząć uczyć się innych języków programowania. Uczę się żeby być elastycznym. Cel to mieć możliwość skonfigurować serwer, napisać aplikację mobilną, stronę internetową i program na Windows/Mac i jeszcze więcej. Uczę się również cały czas języka norweskiego. Prywatnie jestem miły, lubię pracować w zespole i dzielić się wiedzą co można zobaczyć po tym póki co jedynym, wspominanym wyżej poście na stackoverflow. Interesuję się również motoryzacją oraz elektroniką, również zbyt wiele by opisywać. Trenuję też na siłowni. Jeżeli zainteresował Cię ten opis to napisz do mnie korzystając z formularza albo w miejscu gdzie znalazłeś link do tej strony.<br>Komendy do GIT:<br><br><div id='one' class='copybox'><p>git clone https://git.nbtb.eu/git/main</p><i class='fas fa-copy cpbtn' onclick='copy(event)'></i></div><br><br><br><div id='two' class='copybox'><p>git clone https://git.nbtb.eu/git/blog</p><i class='fas fa-copy cpbtn' onclick='copy(event)'></i></div><br><br><br>Jeżeli będziesz miał problem z certyfikatem ssl to wykonaj:<br><br><div id='three' class='copybox'><p>git config --global http.sslVerify 'false'</p><i class='fas fa-copy cpbtn' onclick='copy(event)'></i></div> <br><br><br>Po sklonowaniu możesz przywrócić poprzednie ustawienia przez:<br><br><div id='four' class='copybox'><p>git config --global http.sslVerify 'true'</p><i class='fas fa-copy cpbtn' onclick='copy(event)'></i></div><br><br><br>Serwer jest szyfrowany ale git nie uznaje wszystkich certyfikatów. W razie problemów mogę to wysłać w inny sposób. Po prostu napisz.<br>Mam nadzieję że do usłyszenia :)", "Masz pytanie? Napisz do mnie!<i class='far fa-hand-point-down'></i>", "Twoja wiadomość...", "Twój adres email..."];//email placeholder must be the last one in array
const jpolish = ["Proszę czekać!", "Dostałem Twoją wiadomość i odpowiem jak najszybciej!", "Identyfikator wiadomości to:", "Dziękuję!", "Jakiś błąd: ", "Uzupełnij reCaptcha!", "Sprawdź reCaptcha i spróbuj ponownie.", "Spróbuj ponownie później."];

var txts = hnorsk;
var comm = jnorsk;

function setLang(language) {
    language.includes("en")&&(language="en");
    language.includes("no")&&(language="no");
    language.includes("pl")&&(language="pl");

    switch (language) {
        case "en":
            document.title = "Hire Norbert! He is the best!";
            txts = henglish;
            comm = jenglish;
            break;
        case "no":
            document.title = "Lei Norbert! Han er best!";
            txts = hnorsk;
            comm = jnorsk;
            break;
        case "pl":
            document.title = "Szukam pracy!";
            txts = hpolish;
            comm = jpolish;
            break;
        default:
            txts = hnorsk;
            comm = jnorsk;
    }
    setElements();
}

function setElements() {
    const targets = [".greeting>h1", ".greeting>h2", ".greeting>h3", ".left>p", "#lage", "#tage", "#lloc", "#tloc", "#llang", "#tlang", "#ledu", "#tedu", ".right>article", ".view3 h1", ".mess"]; //REMEMBER TO USE CLASSES FOR JQUERY IN THE FUTURE! 
    $('#email').attr("placeholder", txts[txts.length - 1])
    targets.forEach((target, index) => {
        if (target.charAt(0) === "#") { 
            document.getElementById(target).innerHTML = txts[index];
        } else {
            $(target).html(txts[index]);
        }
    })
} 